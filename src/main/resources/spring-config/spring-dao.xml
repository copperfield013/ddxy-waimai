<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
           
          
	<!-- 声明Hibernate的SessionFactory -->
    <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 结合配置文件 -->
        <property name="configLocations">
        	<value>classpath:hibernate.cfg.xml</value>
        </property>

        <property name="dataSource" ref="dataSource" /> 
        <property name="packagesToScan">
            <list>
            	<value>cn.sowell.ddxyz.model.*.pojo</value>
        	</list>
        </property>
    </bean>
	<!-- 数据库连接池使用c3p0来管理，这些参数在jdbc.properties中进行配置 -->
    <bean id="dataSource"
        class="com.mchange.v2.c3p0.ComboPooledDataSource"  destroy-method="close">
        <property name="driverClass" value="${driverClass}" />
        <property name="jdbcUrl" value="${jdbcUrl}" />
        <property name="user" value="${username}" />
        <property name="password" value="${password}" />
        <property name="acquireIncrement" value="${acquireIncrement}"></property>  
        <property name="initialPoolSize" value="${initialPoolSize}"></property>  
        <property name="maxIdleTime" value="${maxIdleTime}"></property>  
        <property name="maxPoolSize" value="${maxPoolSize}"></property>  
        <property name="minPoolSize" value="${minPoolSize}"></property>  
        <property name="acquireRetryDelay" value="1000"></property>  
        <property name="acquireRetryAttempts" value="60"></property>  
        <property name="breakAfterAcquireFailure" value="false"></property> 
    </bean>
	
 
	<!-- 开启事务管理器（声明式事务在tx:annotation-driven中打开） -->  
	 <bean id="transactionManager"
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

	<!-- 配置通用DAO的事务,要求按照特定方法名来配置事务 -->
	 <tx:advice id="commonAdvice" transaction-manager="transactionManager">
        <tx:attributes>
        	<!-- 数据库修改方法.如果事务已经开启,则支持原事务.如果原本没有事务,就开启一个事务 -->
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="merge*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
             <!-- 查询方法, 总是非事务地执行，并挂起任何存在的事务。 -->
            <tx:method name="get*" propagation="SUPPORTS" />
            <tx:method name="query*" propagation="SUPPORTS" />

            <!-- 通用方法 -->
            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <!-- 通用事务的AOP配置， -->
	<aop:config>
		<aop:pointcut id="interceptorPointCuts"
			expression="execution(* cn.sowell.ddxyz.model.*.dao.*.*(..))" />
		<aop:advisor advice-ref="commonAdvice" pointcut-ref="interceptorPointCuts" />
	</aop:config>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>